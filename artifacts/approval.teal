#pragma version 8
intcblock 0 1 65536 34
bytecblock 0x 0x6964 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x968d3b1e // "add_electronics(pay,string,string,string,uint64)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x7fe763ee // "read_electronics(uint64)(address,string,string,string,uint64,uint64,uint64,uint64)"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xeb0861db // "buy_electronics(pay,uint64,uint64)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x226997cd // "get_electronics_length()uint64"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x4fb7db5a // "like(uint64)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x23b202ba // "dislike(uint64)void"
==
bnz main_l8
err
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub dislike_6
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub like_5
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getelectronicslength_4
store 9
bytec_2 // 0x151f7c75
load 9
itob
concat
log
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 7
txna ApplicationArgs 2
btoi
store 8
txn GroupIndex
intc_1 // 1
-
store 6
load 6
gtxns TypeEnum
intc_1 // pay
==
assert
load 6
load 7
load 8
callsub buyelectronics_3
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub readelectronics_2
store 5
bytec_2 // 0x151f7c75
load 5
concat
log
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 1
txna ApplicationArgs 2
store 2
txna ApplicationArgs 3
store 3
txna ApplicationArgs 4
btoi
store 4
txn GroupIndex
intc_1 // 1
-
store 0
load 0
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
load 3
load 4
callsub addelectronics_1
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l16
err
main_l16:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_1 // "id"
intc_0 // 0
app_global_put
retsub

// add_electronics
addelectronics_1:
proto 5 0
bytec_0 // ""
dupn 3
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -5
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -5
gtxns Amount
pushint 3000 // 3000
>=
assert
frame_dig -1
intc_0 // 0
>
assert
frame_dig -4
extract 2 0
bytec_0 // ""
!=
assert
frame_dig -3
extract 2 0
bytec_0 // ""
!=
assert
frame_dig -2
extract 2 0
bytec_0 // ""
!=
assert
txn Sender
frame_bury 0
frame_dig 0
len
pushint 32 // 32
==
assert
frame_dig -4
extract 2 0
frame_bury 1
frame_dig 1
len
itob
extract 6 0
frame_dig 1
concat
frame_bury 1
frame_dig -3
extract 2 0
frame_bury 2
frame_dig 2
len
itob
extract 6 0
frame_dig 2
concat
frame_bury 2
frame_dig -2
extract 2 0
frame_bury 3
frame_dig 3
len
itob
extract 6 0
frame_dig 3
concat
frame_bury 3
frame_dig -1
frame_bury 4
intc_0 // 0
frame_bury 5
intc_0 // 0
frame_bury 6
intc_0 // 0
frame_bury 7
frame_dig 0
frame_dig 1
frame_bury 12
frame_dig 12
frame_bury 11
pushint 70 // 70
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 2
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 3
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 11
concat
frame_bury 8
bytec_1 // "id"
app_global_get
itob
box_del
pop
bytec_1 // "id"
app_global_get
itob
frame_dig 8
box_put
bytec_1 // "id"
bytec_1 // "id"
app_global_get
intc_1 // 1
+
app_global_put
retsub

// read_electronics
readelectronics_2:
proto 1 1
bytec_0 // ""
frame_dig -1
itob
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 0
retsub

// buy_electronics
buyelectronics_3:
proto 3 0
bytec_0 // ""
dupn 4
intc_0 // 0
dupn 5
bytec_0 // ""
dup
frame_dig -2
itob
box_get
store 13
store 12
load 13
assert
load 12
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
frame_dig 0
pushint 32 // 32
extract_uint16
frame_dig 0
intc_3 // 34
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
intc_3 // 34
extract_uint16
frame_dig 0
pushint 36 // 36
extract_uint16
substring3
frame_bury 3
frame_dig 0
frame_dig 0
pushint 36 // 36
extract_uint16
dig 1
len
substring3
frame_bury 4
frame_dig 0
pushint 38 // 38
extract_uint64
frame_bury 5
frame_dig 0
pushint 46 // 46
extract_uint64
frame_bury 6
intc_0 // 0
frame_bury 7
intc_0 // 0
frame_bury 8
frame_dig -3
gtxns Receiver
frame_dig 1
==
assert
frame_dig -1
frame_dig 5
*
frame_dig -3
gtxns Amount
==
assert
frame_dig 6
frame_dig -1
+
frame_bury 6
frame_dig 1
frame_dig 2
frame_bury 12
frame_dig 12
frame_bury 11
pushint 70 // 70
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 3
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 11
concat
frame_bury 0
frame_dig -2
itob
box_del
pop
frame_dig -2
itob
frame_dig 0
box_put
retsub

// get_electronics_length
getelectronicslength_4:
proto 0 1
intc_0 // 0
bytec_1 // "id"
app_global_get
frame_bury 0
retsub

// like
like_5:
proto 1 0
bytec_0 // ""
dupn 4
intc_0 // 0
dupn 5
bytec_0 // ""
dup
frame_dig -1
itob
box_get
store 15
store 14
load 15
assert
load 14
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
frame_dig 0
pushint 32 // 32
extract_uint16
frame_dig 0
intc_3 // 34
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
intc_3 // 34
extract_uint16
frame_dig 0
pushint 36 // 36
extract_uint16
substring3
frame_bury 3
frame_dig 0
frame_dig 0
pushint 36 // 36
extract_uint16
dig 1
len
substring3
frame_bury 4
frame_dig 0
pushint 38 // 38
extract_uint64
frame_bury 5
frame_dig 0
pushint 46 // 46
extract_uint64
frame_bury 6
frame_dig 0
pushint 54 // 54
extract_uint64
frame_bury 7
frame_dig 7
intc_1 // 1
+
frame_bury 7
frame_dig 0
pushint 62 // 62
extract_uint64
frame_bury 8
frame_dig 1
frame_dig 2
frame_bury 12
frame_dig 12
frame_bury 11
pushint 70 // 70
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 3
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 11
concat
frame_bury 0
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 0
box_put
retsub

// dislike
dislike_6:
proto 1 0
bytec_0 // ""
dupn 4
intc_0 // 0
dupn 5
bytec_0 // ""
dup
frame_dig -1
itob
box_get
store 17
store 16
load 17
assert
load 16
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
frame_dig 0
pushint 32 // 32
extract_uint16
frame_dig 0
intc_3 // 34
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
intc_3 // 34
extract_uint16
frame_dig 0
pushint 36 // 36
extract_uint16
substring3
frame_bury 3
frame_dig 0
frame_dig 0
pushint 36 // 36
extract_uint16
dig 1
len
substring3
frame_bury 4
frame_dig 0
pushint 38 // 38
extract_uint64
frame_bury 5
frame_dig 0
pushint 46 // 46
extract_uint64
frame_bury 6
frame_dig 0
pushint 54 // 54
extract_uint64
frame_bury 7
frame_dig 0
pushint 62 // 62
extract_uint64
frame_bury 8
frame_dig 8
intc_1 // 1
+
frame_bury 8
frame_dig 1
frame_dig 2
frame_bury 12
frame_dig 12
frame_bury 11
pushint 70 // 70
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 3
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig 4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 11
concat
frame_bury 0
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 0
box_put
retsub